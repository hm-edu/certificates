name: Create Release & Upload Assets

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  ci:
    uses: smallstep/certificates/.github/workflows/ci.yml@master
    secrets: inherit

  create_release:
    name: Create Release
      #needs: ci
    runs-on: ubuntu-20.04
    outputs:
      is_prerelease: ${{ steps.is_prerelease.outputs.IS_PRERELEASE }}
    steps:
      - name: Is Pre-release
        id: is_prerelease
        run: |
          set +e
          echo ${{ github.ref }} | grep "\-rc.*"
          OUT=$?
          if [ $OUT -eq 0 ]; then IS_PRERELEASE=true; else IS_PRERELEASE=false; fi
          echo "::set-output name=IS_PRERELEASE::${IS_PRERELEASE}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ steps.is_prerelease.outputs.IS_PRERELEASE }}

  goreleaser:
    name: Upload Assets To Github w/ goreleaser
    runs-on: ubuntu-20.04
    needs: create_release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          check-latest: true
      - name: Install cosign
        uses: sigstore/cosign-installer@v2.7.0
        with:
          cosign-release: 'v1.12.1'
      - name: Write cosign key to disk
        id: write_key
        run: echo "${{ secrets.COSIGN_KEY }}" > "/tmp/cosign.key"
      - name: Get Release Date
        id: release_date
        run: |
          RELEASE_DATE=$(date +"%y-%m-%d")
          echo "::set-output name=RELEASE_DATE::${RELEASE_DATE}"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: 'latest'
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GORELEASER_PAT }}
          COSIGN_PWD: ${{ secrets.COSIGN_PWD }}
          RELEASE_DATE: ${{ steps.release_date.outputs.RELEASE_DATE }}

  build_upload_docker:
    name: Build & Upload Docker Images
    runs-on: ubuntu-20.04
    needs: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true
      - name: Install cosign
        uses: sigstore/cosign-installer@v1.1.0
        with:
          cosign-release: 'v1.1.0'
      - name: Write cosign key to disk
        id: write_key
        run: echo "${{ secrets.COSIGN_KEY }}" > "/tmp/cosign.key"
      - name: Build
        id: build
        run: |
          PATH=$PATH:/usr/local/go/bin:/home/admin/go/bin
          make docker-artifacts
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          COSIGN_PWD: ${{ secrets.COSIGN_PWD }}
